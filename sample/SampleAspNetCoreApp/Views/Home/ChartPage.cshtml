@model IEnumerable<HistoricalValue>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<section class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1>Dashboard com Gráfico</h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a href='@Url.Action("Index", "Home")@ViewBag.idUsr'>Home</a></li>
					<li class="breadcrumb-item active">Dashboard com Gráfico</li>
				</ol>
			</div>
		</div>
	</div><!-- /.container-fluid -->
</section>


<div class="alert alert-info" role="alert">
	O gráfico abaixo está mostrando dados do arquivo csv. O agente captura a leitura do arquivo csv como um intervalo da API do agente público. <br />
	Se o Agente Elastic.Apm.NET estiver ativado, a solicitação da ação de leitura do arquivo csv são capturadas e você pode ve-las no Kibana.
</div>


<section class="content">
	<div class="container-fluid">
		<div class="row">
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<h3 class="card-title">Dados do arquivo csv</h3>
					</div>
					<!-- /.card-header -->
					<div class="card-body">

						<canvas id="myChart"></canvas>


					</div>
					<!-- /.card-body -->
				</div>
				<!-- /.card -->
			</div>
			<!-- /.col -->
		</div>
		<!-- /.row -->
	</div>
	<!-- /.container-fluid -->
</section>



<script type="text/javascript">


	var ctx = document.getElementById('myChart').getContext('2d');
	var time = [];
	@{
		foreach (var item in Model.Select(n => n.Date))
		{
			@:time.push("@item.ToShortDateString()");
		}
	}
	var chart = new Chart(ctx,
		{
			// The type of chart we want to create
			type: 'line',


			// The data for our dataset
			data: {
				labels: time,
				datasets: [
					{
						label: "Historical Data",
						backgroundColor: 'rgb(255, 99, 132)',
						borderColor: 'rgb(255, 99, 132)',
						data: [ @{
							        foreach (var item in Model.Select(n => n.Close))
							        {
								        @string.Concat(item.ToString("0.00").Replace(',', '.'), ",")
								        ;
							        }
						        }
						]
					}
				]
			},
			options: {}
		});
</script>